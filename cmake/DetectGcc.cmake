SET(GCC_PTHREAD "")
IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
  SET(GCC_PTHREAD "-pthread")
ENDIF()

SET(GCC_BUGFIX "")
IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU" AND CMAKE_CXX_COMPILER_VERSION MATCHES "4.8.*")
  MESSAGE(STATUS "Detected buggy gcc version: ${CMAKE_CXX_COMPILER_VERSION}")
  MESSAGE(STATUS " - using '-Wl,--no-as-needed' workaround")
  SET(GCC_BUGFIX "-Wl,--no-as-needed")
ENDIF()

SET(GCC_COMMON_WARNINGS " -Wall -Wwrite-strings -Wcast-qual -Wpointer-arith -Wcomment -Wcast-align -Wshadow -Wredundant-decls ") # -Wconversion
SET(GCC_COMMON_CXX_FLAGS " ${GCC_PTHREAD} ${GCC_BUGFIX} -std=c++11 -DSTD_CXX_11 -DGCC_COMPILER -fpermissive ")
SET(GCC_COMMON_C_FLAGS   " ${GCC_PTHREAD} ${GCC_BUGFIX} -DGCC_COMPILER ")

SET(GCC_C_FLAGS_RELEASE   "")
SET(GCC_C_FLAGS_DEBUG     "")
SET(GCC_C_FLAGS_PROFILE   "")
SET(GCC_CXX_FLAGS_RELEASE "")
SET(GCC_CXX_FLAGS_DEBUG   "")
SET(GCC_CXX_FLAGS_PROFILE "")
SET(DEBUG_MACROS   " -DDEBUG_BUILD ")
SET(RELEASE_MACROS " -DRELEASE_BUILD ")
SET(PROFILE_MACROS " -DPROFILE_BUILD ")

IF(WIN32)
  IF(MSYS)
    SET(GCC_C_FLAGS_RELEASE   " -O3 ${GCC_COMMON_C_FLAGS} ${GCC_COMMON_WARNINGS} ${RELEASE_MACROS} ")
    SET(GCC_C_FLAGS_DEBUG     " -g3 ${GCC_COMMON_C_FLAGS} ${GCC_COMMON_WARNINGS} ${DEBUG_MACROS} ")
    SET(GCC_C_FLAGS_PROFILE   " -O2 -pg ${GCC_COMMON_C_FLAGS} ${GCC_COMMON_WARNINGS} ${PROFILE_MACROS} ")
    SET(GCC_CXX_FLAGS_RELEASE " -O3 ${GCC_COMMON_CXX_FLAGS} ${GCC_COMMON_WARNINGS} ${RELEASE_MACROS} -Wold-style-cast ")
    SET(GCC_CXX_FLAGS_DEBUG   " -g3 ${GCC_COMMON_CXX_FLAGS} ${GCC_COMMON_WARNINGS} ${DEBUG_MACROS} -Wold-style-cast ")
    SET(GCC_CXX_FLAGS_PROFILE " -O2 -pg ${GCC_COMMON_CXX_FLAGS} ${GCC_COMMON_WARNINGS} ${PROFILE_MACROS} -Wold-style-cast ")
  ENDIF(MSYS)
ELSE(WIN32)
  SET(GCC_C_FLAGS_RELEASE   " -O3 ${GCC_COMMON_C_FLAGS} ${GCC_COMMON_WARNINGS} ${RELEASE_MACROS} ")
  SET(GCC_C_FLAGS_DEBUG     " -g3 ${GCC_COMMON_C_FLAGS} ${GCC_COMMON_WARNINGS} ${DEBUG_MACROS} ")
  SET(GCC_C_FLAGS_PROFILE   " -O2 -pg ${GCC_COMMON_C_FLAGS} ${GCC_COMMON_WARNINGS} ${PROFILE_MACROS} ")
  SET(GCC_CXX_FLAGS_RELEASE " -O3 ${GCC_COMMON_CXX_FLAGS} ${GCC_COMMON_WARNINGS} ${RELEASE_MACROS} -Wold-style-cast ")
  SET(GCC_CXX_FLAGS_DEBUG   " -g3 ${GCC_COMMON_CXX_FLAGS} ${GCC_COMMON_WARNINGS} ${DEBUG_MACROS} -Wold-style-cast ")
  SET(GCC_CXX_FLAGS_PROFILE " -O2 -pg ${GCC_COMMON_CXX_FLAGS} ${GCC_COMMON_WARNINGS} ${PROFILE_MACROS} -Wold-style-cast ")
ENDIF(WIN32)
