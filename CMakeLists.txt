CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(virtdb-apps)
ENABLE_TESTING()

# SET(CMAKE_VERBOSE_MAKEFILE ON)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

INCLUDE(DefaultCompilerFlags)
FIND_PACKAGE(Threads)
FIND_PACKAGE(OpenSSL) 
FIND_PACKAGE(GnuTLS) 
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(ProtocolBuffers)
FIND_PACKAGE(LibZMQ)
FIND_PACKAGE(Postgres)
# FIND_PACKAGE(Iconv)
FIND_PACKAGE(CheckIconv)
# // TODO: check icu later
FIND_PACKAGE(ICU)
FIND_PACKAGE(Dlopen)
INCLUDE(DetectOpenSSL)
INCLUDE(DetectGnuTLS)
INCLUDE(UseBoost)
INCLUDE(SetupPostgresLinkerFlags)
INCLUDE(SetupPostgresCompilerFlags)
INCLUDE(ExternalProject)

SET(ENV{PATH} "$ENV{PATH}:${CMAKE_CURRENT_SOURCE_DIR}/bin")
MESSAGE(STATUS "New PATH=$ENV{PATH}")

SET(DV_PROJECT_INCLUDES
  ${CMAKE_CURRENT_SOURCE_DIR}/src
  ${CMAKE_CURRENT_BINARY_DIR}/src
  ${CMAKE_CURRENT_SOURCE_DIR}/3rd-party/gtest-1.7.0/include/
  ${PB_INCLUDE}
  ${ZMQ_INCLUDE}
  ${Boost_INCLUDE_DIRS}
  ${PG_INCLUDEDIR_SERVER}
  ${OPENSSL_INCLUDE_DIR}
  ${GNUTLS_INCLUDE_DIR}
  )

INCLUDE_DIRECTORIES(${DV_PROJECT_INCLUDES})

SET(DV_PROJECT_LINK_DIRS
  ${CMAKE_CURRENT_SOURCE_DIR}/lib
  ${CMAKE_CURRENT_BINARY_DIR}/lib
  ${NWRFC_LIBDIR}
  ${PG_LIBDIR}
  )

LINK_DIRECTORIES(${DV_PROJECT_LINK_DIRS})

SUBDIRS( 3rd-party src test )

# INCLUDE(PrintVars)
